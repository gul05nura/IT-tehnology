from abc import ABC, abstractmethod

class Employee(ABC):  # Наследуем ABC
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary

    @abstractmethod
    def work(self):
        pass

    def display_info(self):
        print(f"Name: {self.name}, Age: {self.age}, Salary: {self.salary}")

class Developer(Employee):
    def __init__(self, name, age, salary, programming_language):
        super().__init__(name, age, salary)
        self.programming_language = programming_language

    def work(self):
        print(f"{self.name} пишет код на {self.programming_language}.")

class Manager(Employee):
    def __init__(self, name, age, salary, team_size):
        super().__init__(name, age, salary)
        self.team_size = team_size

    def work(self):
        print(f"{self.name} управляет командой из {self.team_size} человек.")

dev = Developer("Кубат", 30, 7000, "Python")
mgr = Manager("Гуля", 40, 9000, 10)

dev.display_info()
dev.work()

mgr.display_info()
mgr.work()
